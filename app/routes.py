from app import app
from flask import render_template, request, flash, redirect, url_for
from werkzeug.utils import secure_filename
import math


syc10 = [80.0, 73.6, 68.0, 68.0, 56.0, 55.6, 55.2, 54.8, 42.8, 42.4, 42.0, 41.6, 41.2, 40.8, 40.4, 40.0, 28.0, 27.6, 27.2, 26.8, 26.4, 26.0, 25.6, 25.2, 24.8, 24.4, 24.0, 23.6, 23.2, 22.8, 22.4, 22.0, 10.0, 9.8, 9.6, 9.4, 9.2, 9.0, 8.8, 8.6, 8.4, 8.2, 8.0, 7.8, 7.6, 7.4, 7.2, 7.0, 6.8, 6.6, 6.4, 6.2, 6.0, 5.8, 5.6, 5.4, 5.2, 5.0, 4.8, 4.6, 4.4, 4.2, 4.0, 3.8]
syc12 = [120.0, 110.4, 102.0, 102.0, 84.0, 83.4, 82.8, 82.2, 64.2, 63.6, 63.0, 62.4, 61.8, 61.2, 60.6, 60.0, 42.0, 41.4, 40.8, 40.2, 39.6, 39.0, 38.4, 37.8, 37.2, 36.6, 36.0, 35.4, 34.8, 34.2, 33.6, 33.0, 15.0, 14.7, 14.4, 14.1, 13.8, 13.5, 13.2, 12.9, 12.6, 12.3, 12.0, 11.7, 11.4, 11.1, 10.8, 11.6, 10.2, 9.9, 9.6, 9.3, 9.0, 8.7, 8.4, 8.1, 7.8, 7.5, 7.2, 6.9, 6.6, 6.3, 6.0, 5.7]
syc14 = [160.0, 147.2, 136.0, 136.0, 112.0, 111.2, 110.4, 109.6, 85.6, 84.8, 84.0, 83.2, 82.4, 81.6, 80.8, 80.0, 56.0, 55.2, 54.4, 53.6, 52.8, 52.0, 51.2, 50.4, 49.6, 48.8, 48.0, 47.2, 46.4, 45.6, 44.8, 44.0, 20.0, 19.6, 19.2, 18.8, 18.4, 18.0, 17.6, 17.2, 16.8, 16.4, 16.0, 15.6, 15.2, 14.8, 14.4, 15.6, 13.6, 13.2, 12.8, 12.4, 12.0, 11.6, 11.2, 10.8, 10.4, 10.0, 9.6, 9.2, 8.8, 8.4, 8.0, 7.6]
sjcccadet = [80.0, 73.6, 68.0, 68.0, 56.0, 55.6, 55.2, 54.8, 42.8, 42.4, 42.0, 41.6, 41.2, 40.8, 40.4, 40.0, 28.0, 27.6, 27.2, 26.8, 26.4, 26.0, 25.6, 25.2, 24.8, 24.4, 24.0, 23.6, 23.2, 22.8, 22.4, 22.0, 10.0, 9.8, 9.6, 9.4, 9.2, 9.0, 8.8, 8.6, 8.4, 8.2, 8.0, 7.8, 7.6, 7.4, 7.2, 7.0, 6.8, 6.6, 6.4, 6.2, 6.0, 5.8, 5.6, 5.4, 5.2, 5.0, 4.8, 4.6, 4.4, 4.2, 4.0, 3.8]
sjccjunior = [120.0, 110.4, 102.0, 102.0, 84.0, 83.4, 82.8, 82.2, 64.2, 63.6, 63.0, 62.4, 61.8, 61.2, 60.6, 60.0, 42.0, 41.4, 40.8, 40.2, 39.6, 39.0, 38.4, 37.8, 37.2, 36.6, 36.0, 35.4, 34.8, 34.2, 33.6, 33.0, 14.0, 13.8, 13.6, 13.4, 13.2, 13.0, 12.8, 12.6, 12.4, 12.2, 12.0, 11.8, 11.6, 11.4, 11.2, 11.0, 10.8, 10.6, 10.4, 10.2, 10.0, 9.8, 9.6, 9.4, 9.2, 9.0, 8.8, 8.6, 8.4, 8.2, 8.0, 7.8]

rocdiv1a = [1000.0, 920.0, 850.0, 850.0, 700.0, 695.0, 690.0, 685.0, 535.0, 530.0, 525.0, 520.0, 515.0, 510.0, 505.0, 500.0, 350.0, 345.0, 340.0, 335.0, 330.0, 325.0, 320.0, 315.0, 310.0, 305.0, 300.0, 295.0, 290.0, 285.0, 280.0, 275.0, 270.0, 265.0, 260.0, 255.0, 250.0, 245.0, 240.0, 235.0, 230.0, 225.0, 220.0, 215.0, 210.0, 205.0, 200.0, 195.0, 190.0, 185.0, 180.0, 175.0, 170.0, 165.0, 160.0, 155.0, 150.0, 145.0, 140.0, 135.0, 130.0, 125.0, 120.0, 115.0]
rocdiv2 = [500.0, 460.0, 425.0, 425.0, 350.0, 347.5, 345.0, 342.5, 267.5, 265.0, 262.5, 260.0, 257.5, 255.0, 252.5, 250.0, 175.0, 172.5, 170.0, 167.5, 165.0, 162.5, 160.0, 157.5, 155.0, 152.5, 150.0, 147.5, 145.0, 142.5, 140.0, 137.5, 135.0, 132.5, 130.0, 127.5, 125.0, 122.5, 120.0, 117.5, 115.0, 112.5, 110.0, 107.5, 105.0, 102.5, 100.0, 97.5, 95.0, 92.5, 90.0, 87.5, 85.0, 82.5, 80.0, 77.5, 75.0, 72.5, 70.0, 67.5, 65.0, 62.5, 60.0, 57.5]
rocdiv3 = [500.0, 460.0, 425.0, 425.0, 350.0, 347.5, 345.0, 342.5, 267.5, 265.0, 262.5, 260.0, 257.5, 255.0, 252.0, 250.0, 175.0, 172.5, 170.0, 167.5, 165.0, 162.5, 160.0, 157.5, 155.0, 152.5, 150.0, 147.5, 145.0, 142.5, 140.0, 137.5, 135.0, 132.5, 130.0, 127.5, 125.0, 122.5, 120.0, 117.5, 115.0, 112.5, 110.0, 107.5, 105.0, 102.5, 100.0, 97.5, 95.0, 92.5, 90.0, 87.5, 85.0, 165.0, 160.0, 155.0, 150.0, 145.0, 140.0, 135.0, 130.0, 125.0, 120.0, 115.0]
rocvet = [1000.0, 920.0, 850.0, 850.0, 700.0, 695.0, 690.0, 685.0, 535.0, 530.0, 525.0, 520.0, 515.0, 510.0, 5.0, 500.0, 350.0, 345.0, 340.0, 335.0, 330.0, 325.0, 320.0, 315.0, 310.0, 305.0, 300.0, 295.0, 290.0, 285.0, 280.0, 275.0, 270.0, 265.0, 260.0, 255.0, 250.0, 245.0, 240.0, 235.0, 230.0, 225.0, 220.0, 215.0, 210.0, 205.0, 200.0, 195.0, 190.0, 185.0, 180.0, 175.0, 170.0, 54.0, 55.0, 56.0, 57.0, 58.0, 59.0, 60.0, 61.0, 62.0, 63.0, 64.0]

nac10 = [100.0, 92.0, 85.0, 85.0, 70.0, 69.5, 69.0, 68.5, 53.5, 53.0, 52.5, 52.0, 51.5, 51.0, 50.5, 50.0, 35.0, 34.5, 34.0, 33.5, 33.0, 32.5, 32.0, 31.5, 31.0, 30.5, 30.0, 29.5, 29.0, 28.5, 28.0, 27.5, 12.5, 12.25, 12.0, 11.75, 11.5, 11.25, 11.0, 10.75, 10.5, 10.25, 10.0, 9.75, 9.5, 9.25, 9.0, 8.75, 8.5, 8.25, 8.0, 7.75, 7.5, 7.25, 7.0, 6.75, 6.5, 6.25, 6.0, 5.75, 5.5, 5.25, 5.0, 4.75]
nac12 = [150.0, 138.0, 127.5, 127.5, 105.0, 104.25, 103.5, 102.75, 80.25, 79.5, 78.75, 78.0, 77.25, 76.5, 75.75, 75.0, 52.5, 51.75, 51.0, 50.25, 49.5, 48.75, 48.0, 47.25, 46.5, 45.75, 45.0, 44.25, 43.5, 42.75, 42.0, 41.25, 18.75, 18.375, 18.0, 17.625, 17.25, 16.875, 16.5, 16.125, 15.75, 15.375, 15.0, 14.625, 14.25, 13.875, 13.5, 13.125, 12.75, 12.375, 12.0, 11.625, 11.25, 10.875, 10.5, 10.125, 9.75, 9.375, 9.0, 8.625, 8.25, 7.875, 7.5, 7.125]
nac14 = [200.0, 184.0, 170.0, 170.0, 140.0, 139.0, 138.0, 137.0, 107.0, 106.0, 105.0, 104.0, 103.0, 102.0, 101.0, 100.0, 70.0, 69.0, 68.0, 67.0, 66.0, 65.0, 64.0, 63.0, 62.0, 61.0, 60.0, 59.0, 58.0, 57.0, 56.0, 55.0, 25.0, 24.5, 24.0, 23.5, 23.0, 22.5, 22.0, 21.5, 21.0, 20.5, 20.0, 19.5, 19.0, 18.5, 18.0, 17.5, 17.0, 16.5, 16.0, 15.5, 15.0, 14.5, 14.0, 13.5, 13.0, 12.5, 12.0, 11.5, 11.0, 10.5, 10.0, 9.5]
naccadet = [400.0, 368.0, 340.0, 340.0, 280.0, 278.0, 276.0, 274.0, 214.0, 212.0, 210.0, 208.0, 206.0, 204.0, 202.0, 200.0, 140.0, 138.0, 136.0, 134.0, 132.0, 130.0, 128.0, 126.0, 124.0, 122.0, 120.0, 118.0, 116.0, 114.0, 112.0, 110.0, 50.0, 49.0, 48.0, 47.0, 46.0, 45.0, 44.0, 43.0, 42.0, 41.0, 40.0, 39.0, 38.0, 37.0, 36.0, 35.0, 34.0, 33.0, 32.0, 31.0, 30.0, 29.0, 28.0, 27.0, 26.0, 25.0, 24.0, 23.0, 22.0, 21.0, 20.0, 19.0]
nacjunior = [600.0, 552.0, 510.0, 510.0, 420.0, 417.0, 414.0, 411.0, 321.0, 318.0, 315.0, 312.0, 309.0, 306.0, 303.0, 300.0, 210.0, 207.0, 204.0, 201.0, 198.0, 195.0, 192.0, 189.0, 186.0, 183.0, 180.0, 177.0, 174.0, 171.0, 168.0, 165.0, 70.0, 69.0, 68.0, 67.0, 66.0, 65.0, 64.0, 63.0, 62.0, 61.0, 60.0, 59.0, 58.0, 57.0, 56.0, 55.0, 54.0, 53.0, 52.0, 51.0, 50.0, 49.0, 48.0, 47.0, 46.0, 45.0, 44.0, 43.0, 42.0, 41.0, 40.0, 39.0]
nacdiv1 = [1000.0, 920.0, 850.0, 850.0, 700.0, 695.0, 690.0, 685.0, 535.0, 530.0, 525.0, 520.0, 515.0, 510.0, 505.0, 500.0, 350.0, 345.0, 340.0, 335.0, 330.0, 325.0, 320.0, 315.0, 310.0, 305.0, 300.0, 295.0, 290.0, 285.0, 280.0, 275.0, 100.0, 99.0, 98.0, 97.0, 96.0, 95.0, 94.0, 93.0, 92.0, 91.0, 90.0, 89.0, 88.0, 87.0, 86.0, 85.0, 84.0, 83.0, 82.0, 81.0, 80.0, 79.0, 78.0, 77.0, 76.0, 75.0, 74.0, 73.0, 72.0, 71.0, 70.0, 69.0]
nacvet = [400.0, 368.0, 340.0, 340.0, 280.0, 278.0, 276.0, 274.0, 214.0, 212.0, 210.0, 208.0, 206.0, 204.0, 202.0, 200.0, 140.0, 138.0, 136.0, 134.0, 132.0, 130.0, 128.0, 126.0, 124.0, 122.0, 120.0, 118.0, 116.0, 114.0, 112.0, 110.0, 70.0, 69.0, 68.0, 67.0, 66.0, 65.0, 64.0, 63.0, 62.0, 61.0, 60.0, 59.0, 58.0, 57.0, 56.0, 55.0, 54.0, 53.0, 52.0, 51.0, 50.0, 49.0, 48.0, 47.0, 46.0, 45.0, 44.0, 43.0, 42.0, 41.0, 40.0, 39.0]

regional_points = {
    'y10': 100,
    'y12': 100,
    'y14': 100,
    'cadet': 100,
    'junior': 100,
    'div3': 500,
    'div2': 500,
    'div1a': 1000,
    'div1': 0,
    'vet': 1000,
}


@app.route('/DE', methods=('GET', 'POST'))
def de_calculator():
    if request.method == 'POST':
        x = request.form['seed']
        if not request.form['seed'] or not request.form['competitors']:
            flash('Please enter all fields', 'danger')
        else:
            seed = int(request.form['seed'])
            competitors = int(request.form['competitors'])
            print(seed, competitors)

            incomplete_table = 1 << (competitors - 1).bit_length()
            bys = incomplete_table - competitors
            if seed <= bys:
                has_by = True
            else:
                has_by = False
            if has_by:
                opponent = (2 ** (math.log(incomplete_table, 2) - 1)) + 1 - seed
            elif bys == 0:
                opponent = competitors + 1 - seed
            else:
                opponent = bys + (50 - (seed - bys) + 1)

            return render_template('DE_calculator.html', incompleteTable=incomplete_table,
                                   bys=bys,
                                   hasBy=has_by,
                                   opponent=int(opponent))

    return render_template('DE_calculator.html')


@app.route('/points', methods=('GET', 'POST'))
def points_calculator():
    if request.method == 'POST':
        if not request.form['competition'] or not request.form['age'] or not request.form['result'] or not request.form['competitors']:
            flash('Please enter all fields', 'danger')
        competition = request.form['competition']
        age = request.form['age']
        place = int(request.form['result'])
        competitors = int(request.form['competitors'])
        print(competition, age, place, competitors)

        if competition == 'regional':
            if age in ['y10', 'y12', 'y14', 'cadet', 'junior']:
                points = regional_points[age] / competitors * (competitors + 1 - place)
            elif place > 64:
                points = 0
            elif age == 'div1a':
                points = rocdiv1a[place - 1]
            elif age == 'div2':
                points = rocdiv2[place - 1]
            elif age == 'div3':
                points = rocdiv3[place - 1]
            elif age == 'vet':
                points = rocvet[place - 1]
            else:
                points = 0
        elif place > 64:
            points = 0
        elif competition == 'Super Circuit':
            if age == 'y10':
                points = syc10[place - 1]
            elif age == 'y12':
                points = syc12[place - 1]
            elif age == 'y14':
                points = syc14[place - 1]
            elif age == 'cadet':
                points = sjcccadet[place - 1]
            elif age == 'junior':
                points = sjccjunior[place - 1]
            else:
                points = 0
        else:
            if age == 'y10':
                points = nac10[place - 1]
            elif age == 'y12':
                points = nac12[place - 1]
            elif age == 'y14':
                points = nac14[place - 1]
            elif age == 'cadet':
                points = naccadet[place - 1]
            elif age == 'junior':
                points = nacjunior[place - 1]
            elif age == 'nacdiv1':
                points = nacdiv1[place - 1]
            elif age == 'vet':
                points = nacvet[place - 1]
            else:
                points = 0

        return render_template('points_calculator.html', points=str(points))
    return render_template('points_calculator.html')


@app.route('/rating', methods=('GET', 'POST'))
def rating_calculator():
    if request.method == 'POST':
        if not request.form['event']:
            flash('Please enter all fields', 'danger')

        if request.form['event'] == 'E1':
            awards = '<p>1 > E</p>'
        elif request.form['event'] == 'D1':
            awards = '<p>1 > D<br>2-4 > E</p>'
        elif request.form['event'] == 'C1':
            awards = '<p>1 > C<br>2-4 > D<br>5-8 > E</p>'
        elif request.form['event'] == 'C2':
            awards = '<p>1 > C<br>2-4 > D<br>5-8 > E</p>'
        elif request.form['event'] == 'C3':
            awards = '<p>1-4 > C<br>5-8 > D<br>9-16 > E</p>'
        elif request.form['event'] == 'B1':
            awards = '<p>1 > B<br>2-4 > C<br>5-6 > D<br>7-8 > E</p>'
        elif request.form['event'] == 'B2':
            awards = '<p>1 > B<br>2-4 > C<br>5-8 > D<br>9-12 > E</p>'
        elif request.form['event'] == 'B3':
            awards = '<p>1-4 > B<br>5-8 > C<br>9-16 > D<br>17-32 > E</p>'
        elif request.form['event'] == 'A1':
            awards = '<p>1 > A<br>2 > B<br>3-4 > C<br>5-6 > D<br>7-8 > E</p>'
        elif request.form['event'] == 'A2':
            awards = '<p>1 > A<br>2-4 > B<br>5-8 > C<br>9-10 > D<br>11-12 > E</p>'
        elif request.form['event'] == 'A3':
            awards = '<p>1-4 > A<br>5-8 > B<br>9-16 > C<br>17-24 > D<br>25-32 > E</p>'
        elif request.form['event'] == 'A4':
            awards = '<p>1-8 > A<br>9-16 > B<br>17-24 > C<br>25-32 > D<br>33-48 > E</p>'
        else:
            awards = ''

        return render_template('rating_calculator.html', awards=awards)
    return render_template('rating_calculator.html')


@app.route('/')
def landing_page():
    return redirect(url_for('DE'))
